##################################################################
# Author:  andreas.gregor.frank@googlemail.com                                
#     
# License: The MIT License
#
# Copyright (c) <2012> <andreas.gregor.frank@googlemail.com>


# stolen from bash source examples/functions/ and modified
__basename() {
   __decoratorCheck "${FUNCNAME[0]}" "${BASH_SOURCE[0]}" "$@"
   local path="$1"
   local suffix="$2"
   local tpath="${path%/}"

   # Strip trailing '/' characters from path (unusual that this should
   # ever occur, but basename(1) seems to deal with it.)
   while [[ "${tpath}" != "${path}" ]]
   do
      tpath="${path}"
      path="${tpath%/}"
   done
   # Strip off pathname
   path="${path##*/}"
   # Also strip off extension, if any.    
   System.out.println "${path%${suffix}}"
   return 0
}

__dirname() {
   __decoratorCheck "${FUNCNAME[0]}" "${BASH_SOURCE[0]}" "$@"
   local dir="$1"
   local tmpdir="${dir%/}"

   # Strip trailing '/' characters
   while [[ "${tmpdir}" != "${dir}" ]]
   do
      tmpdir="${dir}"
      dir="${tmpdir%/}"
   done

   # Strip double '/' characters from dir 
   tmpdir='' 
   local lastchar=''
   for ((i=0; i < ${#dir}; i++))
   do
      local char="${dir:i:1}"
      if [[ "${lastchar}" == "/" && "${char}" == "${lastchar}" ]]; then
         :
      else
         tmpdir="${tmpdir}""${char}"
      fi
      lastchar=${char}
   done
   dir="${tmpdir}"

   # if there is no / in param or only the root /
   if [[ "${1%/*}" == "$1" ]]; then
      System.out.println "."
   else
      if [[ -z "${dir%/*}" ]]; then
         System.out.println "/"
      else
         System.out.println "${dir%/*}"
      fi
   fi
   return 0
}

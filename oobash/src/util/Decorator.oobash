##################################################################
# Author:  andreas.gregor.frank@googlemail.com
#
# License: The MIT License
#
# Copyright (c) <2010> <andreas.gregor.frank@googlemail.com>

# For cleanup: All the functions here don't have to be registered in the Registry.
# They are deleted in the __cleanUp function by name
  
##############
# decorators #
##############

@calling() {
   if (( $# != 0 )); then
      local func="$1"
      shift;shift
      printf "%s\n" "Calling: ${func} $*" >&2
   fi
   return 0
}

@timestamp() {
   if (( $# != 0 )); then
      printf "%s\n" "Time is $(date "+%s.%N" 2>/dev/null) [seconds.nanoseconds]" >&2
   fi
   return 0
}

@deprecated() {
   if (( $# != 0 )); then
      printf "%s\n" "DeprecatedWarning for $1" >&2
   fi
   return 0
}

@runtime() {
   if (( $# != 0 )); then
      # we have date command ?
      if command -v date >/dev/null 2>&1; then
         local testtimestamp
         testtimestamp="$(date "+%N" 2>/dev/null)"
         # is GNU date and is bc available ?
         if [[ "${testtimestamp: -1}" != "N" ]] && command -v bc >/dev/null 2>&1; then
            local time="$(printf "%s\n" "$(date +"%s.%N")-${__STARTTIME__}" | bc -l)"
            if [[ "${time:0:1}" == "." ]]; then
               time=0"${time}"
            fi
            printf "%s\n" "Runtime: ${time} [seconds.nanoseconds]"
         fi
      else
         printf "%s\n" "Runtime: ${SECONDS} [seconds]"
      fi
   fi
   return 0
}

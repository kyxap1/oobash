##################################################################
# Author:  andreas.gregor.frank@googlemail.com                                
#     
# License: The MIT License
#
# Copyright (c) <2010> <andreas.gregor.frank@googlemail.com>

#########################
#########################
##                     ##
##      GENERATOR      ## 
##                     ##
#########################
#########################

Class.generator()
{
   if (( $# >= 2 ))
   then
      # check for valid class name
      local userClass="$1"
      shift
      eval local \'"$userClass"\'=test 2>/dev/null
      if (( $? != 0 ))
      then
         System.err.println $"Sorry, no valid classname: '$userClass'"
         return 1
      fi         

      # define attributes in array
      declare -a  attributes=("$@")

      # check for valid attribute name
      while (($#))
      do
         local attribute="$1"
         declare -i i
         for ((i=0; i < ${#attribute}; i++))
         do
            eval local \'"$attribute"\'=test 2>/dev/null
            if (( $? != 0 ))
            then
               System.err.println $"Sorry, no valid attribute name: '$attribute'"
               return 1
            fi             
         done
         shift
      done
      
      # generate array of getters
      declare -a getters
      for (( i=0; i < ${#attributes[@]}; i++))
      do
         getters+=("get$(__strUpper ${userClass:0:1})${userClass:1}$(__strUpper ${attributes[$i]:0:1})${attributes[$i]:1}")
      done
      echo ${getters[@]}
System.out.println "#############################################################
# Author:  $USER
# Date:    $(date +%Y-%m-%d)
# License: The MIT License
# Copyright (c) <$(date +%Y)> <$USER>
#############################################################

 
# Your \"Starter\" method array for later inheritance actions
declare -a __${userClass}Methods__=(\${getters[@]})

# Your \"Starter\" method array:
declare -a __${userClass}__=(\${__${userClass}Methods__[@]} \${__ObjectMethods__[@]})

# This is your constructor for the $userClass class:
# Don't forget: all your objects are immutable:  
# http://en.wikipedia.org/wiki/Immutable_object
$userClass()
{
   if (( \$# == $((${#attributes[@]} + 1 )) ))
   then
      local this=\"\$1\""
      for (( i=0; i < ${#attributes[@]}; i++))
      do
         System.out.println "      local ${attributes[$i]}=\"\$$(( i + 2 ))\""
      done
      System.out.println "      
      if ! __visible \"\$this\"
      then
         System.err.println \$\"Sorry, objectname '\$this' is not valid\"
         return 1
      fi  

      if ! __checkForKeywords \"\$this\"
      then
         System.err.println \$\"Sorry, objectname '\$this' is a keyword\"
         return 1
      fi 

      if ! __periodCheck \"\$this\"
      then
         System.err.println \$\"Sorry, no full stop character allowed in objectname\"
         return 1
      fi

      local class=\$FUNCNAME
      local pointer=\$(System.currentTimeNanos)  

      __destructor \"\$this\"

      __alias \"\$this\" \"\$FUNCNAME\"
"
      for (( i=0; i < ${#attributes[@]}; i++))
      do
         System.out.println "      __attribute ${attributes[$i]}=\"\$${attributes[$i]}\""
      done
System.out.println "
      return 0
   fi
   local printStream=err
   $userClass.help \$FUNCNAME
   return 1	
}
__registerClass $userClass
"
fi
}
